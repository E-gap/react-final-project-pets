{"version":3,"file":"static/js/707.6d7f23dd.chunk.js","mappings":"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","sources":["components/Buttons/FormButon/ButtonBack.jsx","components/Buttons/FormButon/ButtonNext.jsx","services/ChooseOptions/ChooseOption.jsx","services/MoreInfo/MoreInfo.jsx","services/PersonalDetails/PersonalDetails.jsx","services/InitialState.js","components/AddPetForm/AddPetForm.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ButtonBack = ({ text, clickHandler, type }) => {\n  return (\n    <button onClick={clickHandler} type={type}>\n      {text}\n    </button>\n  );\n};\n\nButtonBack.propTypes = {\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonBack;","import PropTypes from 'prop-types';\n\nconst ButtonNext = ({\n  text,\n  icon,\n  clickHandler,\n  filled,\n  short,\n  type,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={clickHandler && (() => clickHandler(false))}\n      filled={filled ? 'true' : undefined}\n      short={short}\n    >\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nButtonNext.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node,\n  clickHandler: PropTypes.func,\n  filled: PropTypes.bool,\n  short: PropTypes.bool,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n};\n\nButtonNext.defaultProps = {\n  type: 'button',\n};\n\nexport default ButtonNext;\n","import React from 'react';\nimport { Field, useFormikContext } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst ChooseOption = () => {\n  const { values, setFieldValue } = useFormikContext();\n\n  const handleCategoryChange = event => {\n    const category = event.target.value;\n    setFieldValue('category', category);\n  };\n\n  return (\n    <div>\n      {/* Радіокнопка для категорії \"Ваш питомець\" */}\n      <label htmlFor=\"your-pet\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"your-pet\"\n          id=\"your-pet\"\n          checked={values.category === 'your-pet'}\n          onChange={handleCategoryChange}\n        />\n        Your pet\n      </label>\n\n      {/* Радіокнопка для категорії \"Продати\" */}\n      <label htmlFor=\"sell\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"sell\"\n          id=\"sell\"\n          checked={values.category === 'sell'}\n          onChange={handleCategoryChange}\n        />\n        Sell\n      </label>\n\n      {/* Радіокнопка для категорії \"Загублено/знайдено\" */}\n      <label htmlFor=\"lost-found\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"lost-found\"\n          id=\"lost-found\"\n          checked={values.category === 'lost-found'}\n          onChange={handleCategoryChange}\n        />\n        Lost/found\n      </label>\n\n      {/* Радіокнопка для категорії \"На добрі руки\" */}\n      <label htmlFor=\"good-hands\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"good-hands\"\n          id=\"good-hands\"\n          checked={values.category === 'good-hands'}\n          onChange={handleCategoryChange}\n        />\n        In good hands\n      </label>\n    </div>\n  );\n};\n\nChooseOption.propTypes = {\n  type: PropTypes.string,\n};\nexport default ChooseOption;\n\n\n\n","import { Field, ErrorMessage /* validateYupSchema */ } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst MoreInfo = ({ category, fileInput, setFileInput }) => {\n  return (\n    <div className=\"personal-form-wrapper\">\n      {/* Відображення вибору статі тільки для певних категорій */}\n      {category !== 'your-pet' && (\n        <div className=\"add-form-sex-wrapper\">\n          <p>The Sex</p>\n          <label>\n            <Field\n              type=\"radio\"\n              name=\"sex\"\n              value=\"female\"\n              className=\"add-form-radio-button\"\n            />\n            Female\n          </label>\n          <label>\n            <Field\n              type=\"radio\"\n              name=\"sex\"\n              value=\"male\"\n              className=\"add-form-radio-button\"\n            />\n            Male\n          </label>\n        </div>\n      )}\n\n      {/* Відображення поля для вибору фото */}\n      <label htmlFor=\"pet-image\" className=\"add-form-image-label\">\n        Add photo\n        <div className=\"add-form-image-wrapper\">\n          {!fileInput && <div>File not selected</div>}\n          {!!fileInput && (\n            <img\n              id=\"image\"\n              src={URL.createObjectURL(fileInput)}\n              alt={fileInput.name}\n            />\n          )}\n        </div>\n        <input\n          type=\"file\"\n          id=\"pet-image\"\n          name=\"pet-image\"\n          accept=\".png, .jpg, .jpeg, .webp\"\n          onChange={event => setFileInput(event.target.files[0])}\n          className=\"file-input\"\n        />\n        <ErrorMessage name=\"pet-image\" component=\"div\" />\n      </label>\n\n      {/* Відображення поля для введення розташування тільки для певних категорій */}\n      {category !== 'your-pet' && (\n        <label htmlFor=\"location\" className=\"add-form-label\">\n          Location\n          <Field\n            placeholder=\"Type of location\"\n            type=\"text\"\n            name=\"location\"\n            className=\"add-form-input\"\n          />\n          <ErrorMessage name=\"location\" component=\"div\" />\n        </label>\n      )}\n\n      {/* Відображення поля для введення ціни тільки для категорії \"sell\" */}\n      {category === 'sell' && (\n        <label htmlFor=\"price\" className=\"add-form-label\">\n          Price\n          <Field\n            placeholder=\"Type of price\"\n            type=\"text\"\n            name=\"price\"\n            className=\"add-form-input\"\n          />\n          <ErrorMessage name=\"price\" component=\"div\" />\n        </label>\n      )}\n\n      {/* Відображення поля для введення коментарів */}\n      <label htmlFor=\"comments\" className=\"add-form-label\">\n        Comments\n        <Field\n          as=\"textarea\"\n          placeholder=\"Type comments\"\n          name=\"comments\"\n          className=\"add-form-text-area\"\n        />\n        <ErrorMessage name=\"comments\" component=\"div\" />\n      </label>\n    </div>\n  );\n};\n\nMoreInfo.propTypes = {\n  category: PropTypes.string.isRequired,\n  fileInput: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  setFileInput: PropTypes.func.isRequired,\n};\n\nexport default MoreInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, Field /* validateYupSchema */ } from 'formik';\n\nconst PersonalDetails = ({ category }) => {\n  // console.log(category,\"kat\")\n  return (\n    <div className=\"personal-form-wrapper\">\n      {/* Перевірка, чи категорія не є \"your-pet\" */}\n      {category !== 'your-pet' && (\n        <label htmlFor=\"title\">\n          Title of add:\n          <Field\n            placeholder=\"Type title\"\n            type=\"text\"\n            name=\"title\"\n            className=\"add-form-input\"\n          />\n          {/* Відображення помилки, якщо поле \"title\" має помилку */}\n          <ErrorMessage name=\"title\" component=\"div\" />\n        </label>\n      )}\n      <label>\n        Name:\n        <Field\n          placeholder=\"Type name pet\"\n          type=\"text\"\n          name=\"name\"\n          className=\"add-form-input\"\n        />\n        {/* Відображення помилки, якщо поле \"name\" має помилку */}\n        <ErrorMessage name=\"name\" component=\"div\" />\n      </label>\n      <label htmlFor=\"birthday\">\n        Birthday:\n        <Field\n          placeholder=\"Type date of birth\"\n          type=\"text\"\n          name=\"birthday\"\n          data-pattern=\"**.**.****\"\n          className=\"add-form-input\"\n        />\n        {/* Відображення помилки, якщо поле \"birthday\" має помилку */}\n        <ErrorMessage name=\"birthday\" component=\"div\" />\n      </label>\n      <label htmlFor=\"breed\" className=\"add-form-label\">\n        Breed:\n        <Field placeholder=\"Type breed\" type=\"text\" name=\"breed\" />\n        {/* Відображення помилки, якщо поле \"breed\" має помилку */}\n        <ErrorMessage name=\"breed\" component=\"div\" />\n      </label>\n    </div>\n  );\n};\n\nPersonalDetails.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default PersonalDetails;\n","export const INITIAL_STATE = {\n    category: '',\n    name: '',\n    title: '',\n    birthday: '',\n    breed: '',\n    location: '',\n    comments: '',\n    image: null,\n    sex: '',\n    price: '',\n  }\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\nimport ButtonBack from '../Buttons/FormButon/ButtonBack';\nimport ButtonNext from '../Buttons/FormButon/ButtonNext';\nimport ChooseOption from '../../services/ChooseOptions/ChooseOption';\nimport MoreInfo from '../../services/MoreInfo/MoreInfo';\nimport PersonalDetails from '../../services/PersonalDetails/PersonalDetails';\n\nimport { INITIAL_STATE } from '../../services/InitialState';\n// import validationSchema from '../../services/validationSchema';\n\n\nconst AddPetForm = () => {\n  const [fileInput, setFileInput] = useState('');\n  const [step, setStep] = useState(0);\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const navigate = useNavigate();\n\n  const steps = ['Choose Option', 'Personal Details', 'More Info'];\n\n  const handleCancelClick = () => {\n    navigate('/user'); // Перехід до шляху '/user'\n  };\n\n  const handleNextClick = e => {\n    setStep(prevState => prevState + 1); // Збільшити крок на 1\n  };\n\n  const handlePrevClick = () => {\n    setStep(prevState => prevState - 1); // Зменшити крок на 1\n  };\n\n  const handleSubmit = async values => {\n    // Створення об'єкту formData, який містить поля форми та їх значення\n\n    const formData = {\n      category: values.category,\n      title: values.title,\n      name: values.name,\n      birthday: values.birthday,\n      breed: values.breed,\n      sex: values.sex,\n      image: fileInput,\n      location: values.location,\n      price: values.price,\n      comments: values.comments\n    };\n\n    // чек що приходить з форми\n    Object.entries(formData).forEach(([key, value]) => console.log(key, ':', value));\n  };\n\n  const getPageTitle = useCallback(() => {\n    // Отримання заголовку сторінки залежно від категорії\n    const titles = {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add to lost or found pet',\n      'good-hands': 'Add to give a Pet for Adoption',\n      '': 'Add Pet'\n    };\n    return titles[category] || 'Add Pet';\n  }, [category]);\n\n  useEffect(() => {\n    setTitle(getPageTitle()); // Оновлення заголовку при зміні категорії\n  }, [getPageTitle]);\n\n  return (\n    <div>\n      <h1>{title}</h1> {/* Відображення заголовку форми */}\n      <ul>\n        {/* Відображення списку кроків форми */}\n        {steps.map((index) => (\n          <li key={index}>\n            <span>\n              {step === 0 && index === 0 && 'Choose Option'}\n              {step === 1 && index === 1 && 'Personal Details'}\n              {step === 2 && index === 2 && 'More Info'}\n            </span>\n          </li>\n        ))}\n      </ul>\n      <Formik initialValues={INITIAL_STATE} onSubmit={handleSubmit}>\n        {() => (\n          <Form>\n            {/* Відображення поточного кроку форми залежно від значення змінної `step` */}\n            {step === 0 && (\n              <div>\n                <ChooseOption setCategory={setCategory} /> {/* Крок 1: Вибір опції */}\n                <ButtonNext type=\"button\" text=\"Next\" clickHandler={handleNextClick} filled={true} />\n              </div>\n            )}\n            {step === 1 && (\n              <div>\n                <PersonalDetails category={category} /> {/* Крок 2: Особисті дані */}\n                <ButtonNext type=\"button\" text=\"Next\" clickHandler={handleNextClick} filled={true} />\n                <ButtonBack type=\"button\" disabled={!category} clickHandler={handlePrevClick} text=\"Back\" />\n              </div>\n            )}\n            {step === 2 && (\n              <div>\n                <MoreInfo fileInput={fileInput} setFileInput={setFileInput} category={category} />{' '}\n                {/* Крок 3: Додаткова інформація */}\n                <ButtonNext type=\"submit\" text=\"Done\" filled={true} clickHandler={handleSubmit} />\n                <ButtonBack type=\"button\" disabled={!category} clickHandler={handlePrevClick} text=\"Back\" />\n              </div>\n            )}\n            {step === 0 && (\n              <ButtonBack type=\"button\" clickHandler={handleCancelClick} text=\"Cancel\" />\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AddPetForm;"],"names":["text","clickHandler","type","onClick","ButtonNext","icon","filled","short","undefined","defaultProps","useFormikContext","values","setFieldValue","handleCategoryChange","event","category","target","value","htmlFor","name","id","checked","onChange","fileInput","setFileInput","className","src","URL","createObjectURL","alt","accept","files","component","placeholder","as","INITIAL_STATE","title","birthday","breed","location","comments","image","sex","price","useState","step","setStep","setTitle","setCategory","navigate","useNavigate","handleCancelClick","handleNextClick","e","prevState","handlePrevClick","handleSubmit","formData","Object","entries","forEach","key","console","log","getPageTitle","useCallback","sell","useEffect","map","index","initialValues","onSubmit","disabled"],"sourceRoot":""}