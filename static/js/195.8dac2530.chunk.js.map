{"version":3,"file":"static/js/195.8dac2530.chunk.js","mappings":"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","sources":["components/Buttons/FormButon/ButtonBack.jsx","components/Buttons/FormButon/ButtonNext.jsx","services/ChooseOptions/ChooseOption.jsx","services/MoreInfo/MoreInfo.jsx","services/PersonalDetails/PersonalDetails.jsx","services/validationSchema.js","services/InitialState.js","components/AddPetForm/AddPetForm.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ButtonBack = ({ text, clickHandler, type }) => {\n  return (\n    <button onClick={clickHandler} type={type}>\n      {text}\n    </button>\n  );\n};\n\nButtonBack.propTypes = {\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonBack;","import React from 'react';\n\nconst ButtonNext = ({ type, text, clickHandler, filled, disabled }) => {\n  return (\n    <button type={type} onClick={clickHandler} disabled={disabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default ButtonNext;\n\n\n\nButtonNext.defaultProps = {\n  type: 'button',\n};\n\n","import React from 'react';\nimport { Field /* useFormikContext */ } from 'formik';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ChooseOption = ({ setCategory }) => {\n  const [category, setLocalCategory] = useState('');\n\n  const handleCategoryChange = event => {\n    setCategory(event.target.value);\n    setLocalCategory(event.target.value);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"your-pet\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"your-pet\"\n          id=\"your-pet\"\n          checked={category === 'your-pet'}\n          onChange={handleCategoryChange}\n        />\n        Your pet\n      </label>\n\n      <label htmlFor=\"sell\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"sell\"\n          id=\"sell\"\n          checked={category === 'sell'}\n          onChange={handleCategoryChange}\n        />\n        Sell\n      </label>\n\n      <label htmlFor=\"lost-found\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"lost-found\"\n          id=\"lost-found\"\n          checked={category === 'lost-found'}\n          onChange={handleCategoryChange}\n        />\n        Lost/found\n      </label>\n\n      <label htmlFor=\"good-hands\">\n        <Field\n          type=\"radio\"\n          name=\"category\"\n          value=\"good-hands\"\n          id=\"good-hands\"\n          checked={category === 'good-hands'}\n          onChange={handleCategoryChange}\n        />\n        In good hands\n      </label>\n    </div>\n  );\n};\n\nChooseOption.propTypes = {\n  setCategory: PropTypes.func.isRequired,\n};\n\nexport default ChooseOption;\n","import { Field, ErrorMessage /* validateYupSchema */ } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst MoreInfo = ({ category, fileInput, setFileInput }) => {\n  return (\n    <div className=\"personal-form-wrapper\">\n      {/* Відображення вибору статі тільки для певних категорій */}\n      {category !== 'your-pet' && (\n        <div className=\"add-form-sex-wrapper\">\n          <p>The Sex</p>\n          <label>\n            <Field\n              type=\"radio\"\n              name=\"sex\"\n              value=\"female\"\n              className=\"add-form-radio-button\"\n            />\n            Female\n          </label>\n          <label>\n            <Field\n              type=\"radio\"\n              name=\"sex\"\n              value=\"male\"\n              className=\"add-form-radio-button\"\n            />\n            Male\n          </label>\n        </div>\n      )}\n\n      {/* Відображення поля для вибору фото */}\n      <label htmlFor=\"pet-image\" className=\"add-form-image-label\">\n        Add photo\n        <div className=\"add-form-image-wrapper\">\n          {!fileInput && <div>File not selected</div>}\n          {!!fileInput && (\n            <img\n              id=\"image\"\n              src={URL.createObjectURL(fileInput)}\n              alt={fileInput.name}\n            />\n          )}\n        </div>\n        <input\n          type=\"file\"\n          id=\"pet-image\"\n          name=\"pet-image\"\n          accept=\".png, .jpg, .jpeg, .webp\"\n          onChange={event => setFileInput(event.target.files[0])}\n          className=\"file-input\"\n        />\n        <ErrorMessage name=\"pet-image\" component=\"div\" />\n      </label>\n\n      {/* Відображення поля для введення розташування тільки для певних категорій */}\n      {category !== 'your-pet' && (\n        <label htmlFor=\"location\" className=\"add-form-label\">\n          Location\n          <Field\n            placeholder=\"Type of location\"\n            type=\"text\"\n            name=\"location\"\n            className=\"add-form-input\"\n          />\n          <ErrorMessage name=\"location\" component=\"div\" />\n        </label>\n      )}\n\n      {/* Відображення поля для введення ціни тільки для категорії \"sell\" */}\n      {category === 'sell' && (\n        <label htmlFor=\"price\" className=\"add-form-label\">\n          Price\n          <Field\n            placeholder=\"Type of price\"\n            type=\"text\"\n            name=\"price\"\n            className=\"add-form-input\"\n          />\n          <ErrorMessage name=\"price\" component=\"div\" />\n        </label>\n      )}\n\n      {/* Відображення поля для введення коментарів */}\n      <label htmlFor=\"comments\" className=\"add-form-label\">\n        Comments\n        <Field\n          as=\"textarea\"\n          placeholder=\"Type comments\"\n          name=\"comments\"\n          className=\"add-form-text-area\"\n        />\n        <ErrorMessage name=\"comments\" component=\"div\" />\n      </label>\n    </div>\n  );\n};\n\nMoreInfo.propTypes = {\n  category: PropTypes.string.isRequired,\n  fileInput: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  setFileInput: PropTypes.func.isRequired,\n};\n\nexport default MoreInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, Field, useFormikContext } from 'formik';\n\nconst PersonalDetails = ({ category }) => {\n  const { handleChange, setFieldValue } = useFormikContext();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    handleChange(e);\n    setFieldValue(name, value); // Update form values\n  };\n\n  return (\n    <div className=\"personal-form-wrapper\">\n      {category !== 'your-pet' && (\n        <label htmlFor=\"title\">\n          Title of add:\n          <Field\n            placeholder=\"Type title\"\n            type=\"text\"\n            name=\"title\"\n            className=\"add-form-input\"\n            onChange={handleInputChange}\n          />\n          <ErrorMessage name=\"title\" component=\"div\" />\n        </label>\n      )}\n      <label>\n        Name:\n        <Field\n          placeholder=\"Type name pet\"\n          type=\"text\"\n          name=\"name\"\n          className=\"add-form-input\"\n          onChange={handleInputChange}\n        />\n        <ErrorMessage name=\"name\" component=\"div\" />\n      </label>\n      <label htmlFor=\"birthday\">\n        Birthday:\n        <Field\n          placeholder=\"Type date of birth\"\n          type=\"text\"\n          name=\"birthday\"\n          data-pattern=\"**.**.****\"\n          className=\"add-form-input\"\n          onChange={handleInputChange}\n        />\n        <ErrorMessage name=\"birthday\" component=\"div\" />\n      </label>\n      <label htmlFor=\"breed\" className=\"add-form-label\">\n        Breed:\n        <Field\n          placeholder=\"Type breed\"\n          type=\"text\"\n          name=\"breed\"\n          onChange={handleInputChange}\n        />\n        <ErrorMessage name=\"breed\" component=\"div\" />\n      </label>\n    </div>\n  );\n};\n\nPersonalDetails.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default PersonalDetails;\n\n","import * as Yup from 'yup';\n\nconst validationSchema = {\n  0: Yup.object().shape({\n    category: Yup.string().required('Category is required'),\n  }),\n  1: Yup.object().shape({\n    // title: Yup.string().required('Title is required'),\n    name: Yup.string().required('Name is required').min(2, 'Too short!').max(16, 'Too long!'),\n    birthday: Yup.string().required('Birthday is required').matches(\n      /^([0-9]{2}).([0-9]{2}).([0-9]{4})$/,\n      'Invalid date format. Use DD.MM.YYYY'\n    ),\n    breed: Yup.string().required('Breed is required').min(2, 'Breed should be at least 2 characters').max(16, 'Breed should not exceed 16 characters'),\n  }),\n  2: Yup.object().shape({\n    image: Yup.mixed().test('fileSize', 'File size too large', (value) => !value || value.size <= 5000000),\n    location: Yup.string().required('Location is required'),\n    price: Yup.number().when('category', {\n      is: 'sell',\n      then: Yup.number().required('Price is required').min(1, 'Price should be more than 0'),\n    }),\n    comments: Yup.string().min(4, 'Comments should be at least 4 characters').max(120, 'Comments should not exceed 120 characters'),\n  }),\n};\n\nexport default validationSchema;","export const INITIAL_STATE = {\n    category: '',\n    name: '',\n    title: '',\n    birthday: '',\n    breed: '',\n    location: '',\n    comments: '',\n    image: null,\n    sex: '',\n    price: '',\n  }\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\n\nimport ButtonBack from '../Buttons/FormButon/ButtonBack';\nimport ButtonNext from '../Buttons/FormButon/ButtonNext';\nimport ChooseOption from '../../services/ChooseOptions/ChooseOption';\nimport MoreInfo from '../../services/MoreInfo/MoreInfo';\nimport PersonalDetails from '../../services/PersonalDetails/PersonalDetails';\n\nimport validationSchema from '../../services/validationSchema';\n\nimport { INITIAL_STATE } from '../../services/InitialState';\n\nconst AddPetForm = () => {\n  const [fileInput, setFileInput] = useState('');\n  const [step, setStep] = useState(0);\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const navigate = useNavigate();\n\n\n  const handleCancelClick = () => {\n    navigate('/user');\n  };\n\n  const handleNextClick = () => {\n    setStep((prevState) => prevState + 1);\n  };\n\n  const handlePrevClick = () => {\n    setStep((prevState) => prevState - 1);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const formData = {\n      category: values.category,\n      title: values.title,\n      name: values.name,\n      birthday: values.birthday,\n      breed: values.breed,\n      sex: values.sex,\n      image: fileInput,\n      location: values.location,\n      price: values.price,\n      comments: values.comments,\n    };\n\n    Object.entries(formData).forEach(([key, value]) =>\n      console.log(key, ':', value)\n    );\n\n    resetForm();\n  };\n\n  const getPageTitle = useCallback(() => {\n    const titles = {\n      'your-pet': 'Add my pet',\n      sell: 'Add pet for sell',\n      'lost-found': 'Add to lost or found pet',\n      'good-hands': 'Add to give a Pet for Adoption',\n      '': 'Add Pet',\n    };\n    return titles[category] || 'Add Pet';\n  }, [category]);\n\n  useEffect(() => {\n    setTitle(getPageTitle());\n  }, [getPageTitle]);\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      <Formik\n        initialValues={INITIAL_STATE}\n        validationSchema={validationSchema[step]}\n        onSubmit={handleSubmit}\n      >\n        {({ handleChange, setFieldValue, values, dirty, isValid, errors }) => (\n          <Form>\n            {step === 0 && (\n              <div>\n                <ChooseOption setCategory={setCategory} />\n                <ButtonNext\n                  type=\"button\"\n                  text=\"Next\"\n                  clickHandler={handleNextClick}\n                  filled={true}\n                  disabled={!category}\n                />\n              </div>\n            )}\n            {step === 1 && (\n              <div>\n                <PersonalDetails\n                  category={category}\n                  handleChange={handleChange}\n                  setFieldValue={setFieldValue}\n                  values={values}\n                />\n                <ButtonNext\n                  type=\"button\"\n                  text=\"Next\"\n                  clickHandler={handleNextClick}\n                  filled={true}\n                  disabled={!isValid}\n                />\n                <ButtonBack\n                  type=\"button\"\n                  disabled={!category}\n                  clickHandler={handlePrevClick}\n                  text=\"Back\"\n                />\n              </div>\n            )}\n            {step === 2 && (\n              <div>\n                <MoreInfo\n                  fileInput={fileInput}\n                  setFileInput={setFileInput}\n                  category={category}\n                />\n                <ButtonNext\n                  type=\"submit\"\n                  text=\"Done\"\n                  filled={true}\n                  disabled={!isValid}\n                />\n                <ButtonBack\n                  type=\"button\"\n                  disabled={!category}\n                  clickHandler={handlePrevClick}\n                  text=\"Back\"\n                />\n              </div>\n            )}\n            {step === 0 && (\n              <ButtonBack\n                type=\"button\"\n                clickHandler={handleCancelClick}\n                text=\"Cancel\"\n              />\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AddPetForm;\n\n\n\n\n\n\n\n"],"names":["text","clickHandler","type","onClick","ButtonNext","disabled","filled","defaultProps","setCategory","useState","category","setLocalCategory","handleCategoryChange","event","target","value","htmlFor","name","id","checked","onChange","fileInput","setFileInput","className","src","URL","createObjectURL","alt","accept","files","component","placeholder","as","useFormikContext","handleChange","setFieldValue","handleInputChange","e","Yup","shape","required","min","max","birthday","matches","breed","image","test","size","location","price","when","is","then","comments","INITIAL_STATE","title","sex","step","setStep","setTitle","navigate","useNavigate","handleCancelClick","handleNextClick","prevState","handlePrevClick","handleSubmit","values","resetForm","formData","Object","entries","forEach","key","console","log","getPageTitle","useCallback","sell","useEffect","initialValues","validationSchema","onSubmit","isValid","dirty","errors"],"sourceRoot":""}