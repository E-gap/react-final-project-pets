{"version":3,"file":"static/js/169.8bcd2ff3.chunk.js","mappings":"qLACA,GAAgB,UAAY,4BAA4B,MAAQ,wBAAwB,WAAa,6BAA6B,WAAa,6BAA6B,kBAAoB,oCAAoC,kBAAoB,oCAAoC,iBAAmB,mCAAmC,iBAAmB,mCAAmC,qBAAuB,uCAAuC,qBAAuB,uCAAuC,SAAW,2BAA2B,QAAU,0BAA0B,QAAU,0BAA0B,gBAAkB,kCAAkC,gBAAkB,kCAAkC,MAAQ,wBAAwB,MAAQ,yB,uCCAlwB,EAAsB,4B,UCStB,EAPuB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACxB,OACE,mBAAQC,KAAK,SAASC,UAAWC,EAAjC,SACGH,GAGN,E,oBCyJD,EAxJiB,SAAC,GAA+B,IAA7BI,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAE/B,SAASC,EAAcC,GACrB,OAAKA,EAEO,4CAA4CC,KAAKD,QAAtD,EACE,sBAFA,mBAIV,CAED,SAASE,EAAiBF,GAExB,OAAKA,EAEMA,EAAMG,OAAS,EACjB,qCAJa,cAKIF,KAAKD,QAAxB,EACE,oCAJA,sBAMV,CAED,IAaMI,EAAe,SAACC,GACpBP,EAASO,EACV,EAED,OACE,iBAAKV,UAAWC,EAAAA,UAAhB,WACE,SAAC,KAAD,CACEU,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAEnBX,SAAU,SAACO,EAAQK,GACjBN,EAAa,CAAEG,MAAOF,EAAOE,MAAOC,SAAUH,EAAOG,WACrDE,EAAQC,WACT,EATH,SAWG,sBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASR,EAApB,EAAoBA,OAApB,OACC,UAAC,KAAD,CAAMV,UAAWC,EAAAA,UAAjB,WACE,SAAC,KAAD,CACEkB,SAAUf,EACVJ,UAAWoB,IAAWnB,EAAAA,OAAD,eAClBA,EAAAA,WAAiBgB,EAAOL,OAASM,EAAQN,QADvB,SAElBX,EAAAA,YAAkBgB,EAAOL,OAASM,EAAQN,OAFxB,IAIrBb,KAAK,QACLsB,KAAK,QACLC,YAAY,UAEbL,EAAOL,OAASM,EAAQN,QACvB,iBAAKZ,UAAWC,EAAAA,kBAAhB,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAAA,MAAWsB,KAAK,UACrC,uBAAIN,EAAOL,YAGbK,EAAOL,OAASM,EAAQN,QACxB,iBAAKZ,UAAWC,EAAAA,kBAAhB,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAAA,MAAWsB,KAAK,UACrC,8CAGJ,SAAC,KAAD,CACEJ,SAAUZ,EACVP,UAAWoB,IAAWnB,EAAAA,OAAD,eAClBA,EAAAA,WAAiBgB,EAAOJ,UAAYK,EAAQL,WAD1B,SAElBZ,EAAAA,YAAkBgB,EAAOJ,UAAYK,EAAQL,UAF3B,IAIrBd,KAAK,WACLsB,KAAK,WACLC,YAAY,aAEbL,EAAOJ,UAAYK,EAAQL,WAC1B,iBAAKb,UAAWC,EAAAA,iBAAhB,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAAA,MAAWsB,KAAK,UACrC,uBAAIN,EAAOJ,eAGbI,EAAOJ,UAAYK,EAAQL,WAC3B,iBAAKb,UAAWC,EAAAA,iBAAhB,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAAA,MAAWsB,KAAK,UACrC,kDAGJ,SAAC,KAAD,CACExB,KAAOG,EAA2B,SAAb,WACrBF,UAAWoB,IAAWnB,EAAAA,OAAD,eAClBA,EAAAA,WACCgB,EAAOH,iBAAmBI,EAAQJ,kBAFjB,SAGlBb,EAAAA,YACEgB,EAAOH,iBAAmBI,EAAQJ,iBAJlB,IAMrBO,KAAK,kBACLG,UAAQ,EACRL,SAAU,SAAAd,GAAK,OAtFK,SAACoB,EAAMpB,GACrC,IAAKH,EAAa,CAChB,IAAKG,EACH,MAAO,+BAET,GAAIoB,GAAQpB,GACNoB,IAASpB,EACX,MAAO,sBAGZ,CACF,CA4EaqB,CAAwBhB,EAAOG,SAAUR,EAD5B,EAEfiB,YAAY,sBAEZpB,GACAe,EAAOH,iBACPI,EAAQJ,kBACN,iBAAKd,UAAWC,EAAAA,qBAAhB,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAAA,MAAWsB,KAAK,UACrC,uBAAIN,EAAOH,sBAGfZ,IACCe,EAAOH,iBACRI,EAAQJ,kBACN,iBAAKd,UAAWC,EAAAA,qBAAhB,WACE,SAAC,MAAD,CAAUD,UAAWC,EAAAA,MAAWsB,KAAK,UACrC,gDAGN,gBACEvB,UACGE,EAAoCD,EAAAA,gBAAtBA,EAAAA,gBAFnB,UAKE,SAAC,EAAD,CAAgBH,MAAQI,EAA+B,QAAjB,qBAjF3C,KAsFH,iBAAKF,UAAWC,EAAAA,SAAhB,WACE,cAAGD,UAAWC,EAAAA,QAAd,SACIC,EAA2C,yBAA7B,8BAElB,SAAC,KAAD,CACEyB,GAAKzB,EAAyB,YAAX,SACnBF,UAAWC,EAAAA,QAFb,SAIIC,EAAwB,WAAV,eAKzB,C,oEC/JD,MAA0B,2BAA1B,EAAiE,6BAAjE,EAAsG,yB,4DC2BtG,EArBkB,WAChB,OAA2B0B,EAAAA,EAAAA,IAAYC,EAAAA,IAA/BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAIH,GAAWC,EACb,OAAO,SAAC,KAAD,CAAUJ,GAAG,UAEtB,IAAMzB,EAAcgC,SAAQ,GAK5B,OACE,gBAAKlC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,oBACA,SAACkC,EAAA,EAAD,CAAUjC,YAAaA,EAAaC,SAPtB,SAAAiC,GAClBJ,GAASK,EAAAA,EAAAA,IAAMD,GAChB,QASF,C","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","webpack://react-homework-template/./src/components/Buttons/AuthButtons/AuthFormButton/AuthFormButton.module.css?529f","components/Buttons/AuthButtons/AuthFormButton/AuthFormButton.jsx","components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputList\":\"AuthForm_inputList__Bt7z0\",\"input\":\"AuthForm_input__dB7h2\",\"errorInput\":\"AuthForm_errorInput__Pe3yE\",\"validInput\":\"AuthForm_validInput__FPtj9\",\"errorMessageEmail\":\"AuthForm_errorMessageEmail__+cPok\",\"validMessageEmail\":\"AuthForm_validMessageEmail__2v+eU\",\"errorMessagePass\":\"AuthForm_errorMessagePass__7Lbfr\",\"validMessagePass\":\"AuthForm_validMessagePass__rj6TQ\",\"errorMessageConfPass\":\"AuthForm_errorMessageConfPass__MiVu0\",\"validMessageConfPass\":\"AuthForm_validMessageConfPass__Iooc1\",\"linklist\":\"AuthForm_linklist__Knemt\",\"txtLink\":\"AuthForm_txtLink__x6e7-\",\"btnLink\":\"AuthForm_btnLink__426Xi\",\"btnLogContainer\":\"AuthForm_btnLogContainer__Dx0rS\",\"btnRegContainer\":\"AuthForm_btnRegContainer__kY7Uk\",\"close\":\"AuthForm_close__2aBQ4\",\"valid\":\"AuthForm_valid__J9A8q\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AuthFormButton_btn__rXkHK\"};","import PropTypes from 'prop-types';\nimport css from './AuthFormButton.module.css';\n\nconst AuthFormButton = ({ title }) => {\n  return (\n    <button type=\"submit\" className={css.btn}>\n      {title}\n    </button>\n  );\n};\nexport default AuthFormButton;\n\nAuthFormButton.propTypes = {\n  title: PropTypes.string,\n};\n","import css from './AuthForm.module.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport classnames from 'classnames';\nimport AuthFormButton from 'components/Buttons/AuthButtons/AuthFormButton/AuthFormButton';\nimport { VscClose } from 'react-icons/vsc';\nimport { BsCheck2 } from 'react-icons/bs';\n\n \nconst AuthForm = ({ isLoginForm, onSubmit }) => {\n\n  function validateEmail(value) {\n    if (!value) {\n      return 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      return 'Enter a valid Email';\n    }\n  }\n\n  function validatePassword(value) {\n    const passwordRegex = /(?=.*[0-9])/;\n    if (!value) {\n      return 'Password is required';\n    } else if (value.length < 6) {\n      return 'Password must be 6 characters long';\n    } else if (!passwordRegex.test(value)) {\n      return 'Password must contain one number.';\n    }\n  }\n\n  const validateConfirmPassword = (pass, value) => {\n    if (!isLoginForm) {\n      if (!value) {\n        return 'Confirm password is required';\n      }\n      if (pass && value) {\n        if (pass !== value) {\n          return 'Password not matched';\n        }\n      }\n    }\n  };\n\n  const handleSubmit = (values) => {\n    onSubmit(values);\n  };\n\n  return (\n    <div className={css.container}>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        onSubmit={(values, actions) => {\n          handleSubmit({ email: values.email, password: values.password });\n          actions.resetForm();\n        }}\n      >\n        {({ errors, touched, values }) => (\n          <Form className={css.inputList}>\n            <Field\n              validate={validateEmail}\n              className={classnames(css.input, {\n                [css.errorInput]: errors.email && touched.email,\n                [css.validInput]: !errors.email && touched.email,\n              })}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n            {errors.email && touched.email && (\n              <div className={css.errorMessageEmail}>\n                <VscClose className={css.close} size=\"26px\" />\n                <p>{errors.email}</p>\n              </div>\n            )}\n            {!errors.email && touched.email && (\n              <div className={css.validMessageEmail}>\n                <BsCheck2 className={css.valid} size=\"26px\" />\n                <p>Email is valid</p>\n              </div>\n            )}\n            <Field\n              validate={validatePassword}\n              className={classnames(css.input, {\n                [css.errorInput]: errors.password && touched.password,\n                [css.validInput]: !errors.password && touched.password,\n              })}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n            />\n            {errors.password && touched.password && (\n              <div className={css.errorMessagePass}>\n                <VscClose className={css.close} size=\"26px\" />\n                <p>{errors.password}</p>\n              </div>\n            )}\n            {!errors.password && touched.password && (\n              <div className={css.validMessagePass}>\n                <BsCheck2 className={css.valid} size=\"26px\" />\n                <p>Password is secure</p>\n              </div>\n            )}\n            <Field\n              type={!isLoginForm ? 'password' : 'hidden'}\n              className={classnames(css.input, {\n                [css.errorInput]:\n                  errors.confirmPassword && touched.confirmPassword,\n                [css.validInput]:\n                  !errors.confirmPassword && touched.confirmPassword,\n              })}\n              name=\"confirmPassword\"\n              required\n              validate={value =>\n                validateConfirmPassword(values.password, value)}\n              placeholder=\"Confirm password\"\n            />\n            {!isLoginForm &&\n              errors.confirmPassword &&\n              touched.confirmPassword && (\n                <div className={css.errorMessageConfPass}>\n                  <VscClose className={css.close} size=\"26px\" />\n                  <p>{errors.confirmPassword}</p>\n                </div>\n              )}\n            {!isLoginForm &&\n              !errors.confirmPassword &&\n              touched.confirmPassword && (\n                <div className={css.validMessageConfPass}>\n                  <BsCheck2 className={css.valid} size=\"26px\" />\n                  <p>Password matched</p>\n                </div>\n              )}\n            <div\n              className={\n                !isLoginForm ? css.btnRegContainer : css.btnLogContainer\n              }\n            >\n              <AuthFormButton title={!isLoginForm ? 'Registration' : 'Login'} />\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <div className={css.linklist}>\n        <p className={css.txtLink}>\n          {!isLoginForm ? 'Already have an account?' : \"Don't have an account?\"}\n        </p>\n        <Link\n          to={!isLoginForm ? '/login' : '/register'}\n          className={css.btnLink}\n        >\n          {!isLoginForm ? 'Login' : 'Register'}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n\nAuthForm.propTypes = {\n  isLoginForm: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginPage_section__pqfrr\",\"container\":\"LoginPage_container__ZK1ET\",\"title\":\"LoginPage_title__RBt-o\"};","import css from './LoginPage.module.css';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport { login } from '../../redux/auth/authOperations';\nimport { getAuth } from 'redux/auth/authSelector';\n\nconst LoginPage = () => {\n  const { isLogin, token } = useSelector(getAuth);\n  const dispatch = useDispatch();\n  if (isLogin && token) {\n    return <Navigate to=\"/user\" />;\n  }\n  const isLoginForm = Boolean(true);\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n  return (\n    <div className={css.section}>\n      <div className={css.container}>\n        <p className={css.title}>Login</p>\n        <AuthForm isLoginForm={isLoginForm} onSubmit={handleLogin} />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["title","type","className","css","isLoginForm","onSubmit","validateEmail","value","test","validatePassword","length","handleSubmit","values","initialValues","email","password","confirmPassword","actions","resetForm","errors","touched","validate","classnames","name","placeholder","size","required","pass","validateConfirmPassword","to","useSelector","getAuth","isLogin","token","dispatch","useDispatch","Boolean","AuthForm","data","login"],"sourceRoot":""}