{"version":3,"file":"static/js/707.4e5d61c7.chunk.js","mappings":"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","sources":["components/Buttons/FormButon/ButtonBack.jsx","components/Buttons/FormButon/ButtonNext.jsx","services/ChooseOptions/ChooseOption.jsx","services/MoreInfo/MoreInfo.jsx","services/PersonalDetails/PersonalDetails.jsx","services/InitialState.js","components/AddPetForm/AddPetForm.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ButtonBack = ({ text, clickHandler, type }) => {\n  return (\n    <button onClick={clickHandler} type={type}>\n      {text}\n    </button>\n  );\n};\n\nButtonBack.propTypes = {\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonBack;","import PropTypes from 'prop-types';\n\nconst ButtonNext = ({\n  text,\n  icon,\n  clickHandler,\n  filled,\n  short,\n  type,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={clickHandler && (() => clickHandler(false))}\n      filled={filled ? 'true' : undefined}\n      short={short}\n    >\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nButtonNext.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node,\n  clickHandler: PropTypes.func,\n  filled: PropTypes.bool,\n  short: PropTypes.bool,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n};\n\nButtonNext.defaultProps = {\n  type: 'button',\n};\n\nexport default ButtonNext;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChooseForm(props) {\n\n  const [category, setCategory] = useState('');\n\n  // Функція для обробки події зміни вибраної радіокнопки\n  const handleCategoryChange = (event) => {\n    // Оновлення стану 'category'\n    setCategory(event.target.value);\n    // Виклик функції 'setCategory', яка була передана через пропси, з вибраним значенням\n    props.setCategory(event.target.value);\n  };\n\n  return (\n    <div>\n      {/* Радіокнопка для категорії \"Ваш питомець\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"your-pet\"\n        id=\"your-pet\"\n        checked={category === 'your-pet'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"your-pet\">Your pet</label>\n\n      {/* Радіокнопка для категорії \"Продати\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"sell\"\n        id=\"sell\"\n        checked={category === 'sell'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"sell\">Sell</label>\n\n      {/* Радіокнопка для категорії \"Загублено/знайдено\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"lost-found\"\n        id=\"lost-found\"\n        checked={category === 'lost-found'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"lost-found\">Lost/found</label>\n\n      {/* Радіокнопка для категорії \"На добрі руки\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"good-hands\"\n        id=\"good-hands\"\n        checked={category === 'good-hands'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"good-hands\">In good hands</label>\n    </div>\n  );\n};\n\n\nChooseForm.propTypes = {\n  setCategory: PropTypes.func.isRequired,\n};\n\nexport default ChooseForm;\n\n\n","import { Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst MoreInfo = ({ category, fileInput, setFileInput }) => {\n  return (\n    <div className=\"personal-form-wrapper\">\n      {/* Відображення вибору статі тільки для певних категорій */}\n      {category !== 'your-pet' && (\n        <div className=\"add-form-sex-wrapper\">\n          <p>The Sex</p>\n          <label>\n            <Field\n              type=\"radio\"\n              name=\"sex\"\n              value=\"female\"\n              className=\"add-form-radio-button\"\n            />\n            Female\n          </label>\n          <label>\n            <Field\n              type=\"radio\"\n              name=\"sex\"\n              value=\"male\"\n              className=\"add-form-radio-button\"\n            />\n            Male\n          </label>\n        </div>\n      )}\n\n      {/* Відображення поля для вибору фото */}\n      <label htmlFor=\"pet-image\" className=\"add-form-image-label\">\n        Add photo\n        <div className=\"add-form-image-wrapper\">\n          {!fileInput && <div>File not selected</div>}\n          {!!fileInput && (\n            <img\n              id=\"image\"\n              src={URL.createObjectURL(fileInput)}\n              alt={fileInput.name}\n            />\n          )}\n        </div>\n        <input\n          type=\"file\"\n          id=\"pet-image\"\n          name=\"pet-image\"\n          accept=\".png, .jpg, .jpeg, .webp\"\n          onChange={(event) => setFileInput(event.target.files[0])}\n          className=\"file-input\"\n        />\n        <ErrorMessage name=\"pet-image\" component=\"div\" />\n      </label>\n\n      {/* Відображення поля для введення розташування тільки для певних категорій */}\n      {category !== 'your-pet' && (\n        <label htmlFor=\"location\" className=\"add-form-label\">\n          Location\n          <Field\n            placeholder=\"Type of location\"\n            type=\"text\"\n            name=\"location\"\n            className=\"add-form-input\"\n          />\n          <ErrorMessage name=\"location\" component=\"div\" />\n        </label>\n      )}\n\n      {/* Відображення поля для введення ціни тільки для категорії \"sell\" */}\n      {category === 'sell' && (\n        <label htmlFor=\"price\" className=\"add-form-label\">\n          Price\n          <Field\n            placeholder=\"Type of price\"\n            type=\"text\"\n            name=\"price\"\n            className=\"add-form-input\"\n          />\n          <ErrorMessage name=\"price\" component=\"div\" />\n        </label>\n      )}\n\n      {/* Відображення поля для введення коментарів */}\n      <label htmlFor=\"comments\" className=\"add-form-label\">\n        Comments\n       \n<Field\n       as=\"textarea\"\n       placeholder=\"Type comments\"\n       name=\"comments\"\n       className=\"add-form-text-area\"\n     />\n<ErrorMessage name=\"comments\" component=\"div\" />\n</label>\n</div>\n);\n};\n\nMoreInfo.propTypes = {\ncategory: PropTypes.string.isRequired,\nfileInput: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\nsetFileInput: PropTypes.func.isRequired,\n};\n\nexport default MoreInfo\n\n\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, Field} from 'formik';\n\nconst PersonalDetails = ({ category }) => {\n  // console.log(category,\"kat\")\n  return (\n    <div className=\"personal-form-wrapper\">\n      {/* Перевірка, чи категорія не є \"your-pet\" */}\n      {category !== 'your-pet' && (\n        <label htmlFor=\"title\">\n          Title of add:\n          <Field placeholder=\"Type title\" type=\"text\" name=\"title\" className=\"add-form-input\" />\n          {/* Відображення помилки, якщо поле \"title\" має помилку */}\n          <ErrorMessage name=\"title\" component=\"div\" />\n        </label>\n      )}\n      <label>\n        Name:\n        <Field placeholder=\"Type name pet\" type=\"text\" name=\"name\" className=\"add-form-input\" />\n        {/* Відображення помилки, якщо поле \"name\" має помилку */}\n        <ErrorMessage name=\"name\" component=\"div\" />\n      </label>\n      <label htmlFor=\"birthday\">\n        Birthday:\n        <Field\n          placeholder=\"Type date of birth\"\n          type=\"text\"\n          name=\"birthday\"\n          data-pattern=\"**.**.****\"\n          className=\"add-form-input\"\n        />\n        {/* Відображення помилки, якщо поле \"birthday\" має помилку */}\n        <ErrorMessage name=\"birthday\" component=\"div\" />\n      </label>\n      <label htmlFor=\"breed\" className=\"add-form-label\">\n        Breed:\n        <Field placeholder=\"Type breed\" type=\"text\" name=\"breed\" />\n        {/* Відображення помилки, якщо поле \"breed\" має помилку */}\n        <ErrorMessage name=\"breed\" component=\"div\" />\n      </label>\n    </div>\n  );\n};\n\nPersonalDetails.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default PersonalDetails;\n\n","export const INITIAL_STATE = {\n    category: '',\n    name: '',\n    title: '',\n    birthday: '',\n    breed: '',\n    location: '',\n    comments: '',\n    image: null,\n    sex: '',\n    price: '',\n  }\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik,Form} from 'formik';\n\nimport ButtonBack from '../Buttons/FormButon/ButtonBack';\nimport ButtonNext from '../Buttons/FormButon/ButtonNext';\nimport ChooseOption from '../../services/ChooseOptions/ChooseOption';\nimport MoreInfo from '../../services/MoreInfo/MoreInfo';\nimport PersonalDetails from '../../services/PersonalDetails/PersonalDetails';\nimport { INITIAL_STATE } from '../../services/InitialState';\n\nconst AddPetForm = () => {\n  const [fileInput, setFileInput] = useState(''); // Стан для вибраного файлу\n  const [step, setStep] = useState(0); // Стан для кроку форми\n  const [title, setTitle] = useState(''); // Стан для заголовку\n  const [category, setCategory] = useState(''); // Стан для категорії\n  const navigate = useNavigate(); // Функція для навігації\n\n  const steps = ['Choose Option', 'Personal Details', 'More Info']; // Масив кроків форми\n\n  const handleCancelClick = () => {\n    navigate('/user'); // Перехід до шляху '/user'\n  };\n\n  const handleNextClick = e => {\n    setStep(prevState => prevState + 1); // Збільшити крок на 1\n  };\n\n  const handlePrevClick = () => {\n    setStep(prevState => prevState - 1); // Зменшити крок на 1\n  };\n\n  const handleSubmit = async values => {\n     // Створення об'єкту formData, який містить поля форми та їх значення\n     handleCancelClick()\n    const formData = {\n      category: values.category, \n      title: values.title,\n      name: values.name, \n      birthday: values.birthday,\n      breed: values.breed,\n      sex: values.sex, \n      image: fileInput,\n      location: values.location, \n      price: values.price, \n      comments: values.comments\n    };\n  \n    // чек що приходить з форми\n    Object.entries(formData).forEach(([key, value]) => console.log(key, ':', value));\n  };\n\n  const getPageTitle = useCallback(() => {\n    // Отримання заголовку сторінки залежно від категорії\n    const titles = {\n      'your-pet': 'Add my pet',\n      'sell': 'Add pet for sell',\n      'lost-found': 'Add to lost or found pet',\n      'good-hands': 'Add to give a Pet for Adoption',\n      '': 'Add Pet',\n    };\n    return titles[category] || 'Add Pet';\n  }, [category]);\n\n  useEffect(() => {\n    setTitle(getPageTitle()); // Оновлення заголовку при зміні категорії\n  }, [getPageTitle]);\n\n  return (\n    <div>\n      <h1>{title}</h1> {/* Відображення заголовку форми */}\n      <ul>\n        {/* Відображення списку кроків форми */}\n        {steps.map((stepName, index) => (\n  <li key={index}>\n    <span>\n      {step === 0 && index === 0 && 'Choose Option'}\n      {step === 1 && index === 1 && 'Personal Details'}\n      {step === 2 && index === 2 && 'More Info'}\n    </span>\n  </li>\n))}\n      </ul>\n      <Formik initialValues={INITIAL_STATE} onSubmit={handleSubmit}>\n        {() => (\n          <Form>\n            {/* Відображення поточного кроку форми залежно від значення змінної `step` */}\n            {step === 0 && (\n              <div>\n                <ChooseOption setCategory={setCategory} /> {/* Крок 1: Вибір опції */}\n                <ButtonNext\n                  type=\"button\"\n                  text=\"Next\"\n                  clickHandler={handleNextClick}\n                  filled={true}\n                />\n              </div>\n            )}\n            {step === 1 && (\n              <div>\n                <PersonalDetails category={category} /> {/* Крок 2: Особисті дані */}\n                <ButtonNext\n                  type=\"button\"\n                  text=\"Next\"\n                  clickHandler={handleNextClick}\n                  filled={true}\n                />\n                <ButtonBack\n                  type=\"button\"\n                  disabled={!category}\n                  clickHandler={handlePrevClick}\n                  text=\"Back\"\n                />\n              </div>\n            )}\n            {step === 2 && (\n              <div>\n                <MoreInfo\n                  fileInput={fileInput}\n                  setFileInput={setFileInput}\n                  category={category}\n                /> {/* Крок 3: Додаткова інформація */}\n                <ButtonNext\n                  type=\"submit\"\n                  text=\"Done\"\n                  filled={true}\n                  clickHandler={handleSubmit}\n                />\n                <ButtonBack\n                  type=\"button\"\n                  disabled={!category}\n                  clickHandler={handlePrevClick}\n                  text=\"Back\"\n                />\n              </div>\n            )}\n            {step === 0 && (\n              <ButtonBack\n                type=\"button\"\n                clickHandler={handleCancelClick}\n                text=\"Cancel\"\n              />\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );};\n\n  export default AddPetForm;\n\n"],"names":["text","clickHandler","type","onClick","ButtonNext","icon","filled","short","undefined","defaultProps","props","useState","category","setCategory","handleCategoryChange","event","target","value","name","id","checked","onChange","htmlFor","fileInput","setFileInput","className","src","URL","createObjectURL","alt","accept","files","component","placeholder","as","INITIAL_STATE","title","birthday","breed","location","comments","image","sex","price","step","setStep","setTitle","navigate","useNavigate","handleCancelClick","handleNextClick","e","prevState","handlePrevClick","handleSubmit","values","formData","Object","entries","forEach","key","console","log","getPageTitle","useCallback","useEffect","map","stepName","index","initialValues","onSubmit","ChooseOption","disabled"],"sourceRoot":""}