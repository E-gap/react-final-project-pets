{"version":3,"file":"static/js/743.4b755442.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","webpack://react-homework-template/./src/components/Buttons/AuthButtons/AuthFormButton/AuthFormButton.module.css?529f","components/Buttons/AuthButtons/AuthFormButton/AuthFormButton.jsx","components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputList\":\"AuthForm_inputList__Bt7z0\",\"input\":\"AuthForm_input__dB7h2\",\"errorInput\":\"AuthForm_errorInput__Pe3yE\",\"validInput\":\"AuthForm_validInput__FPtj9\",\"errorMessageEmail\":\"AuthForm_errorMessageEmail__+cPok\",\"validMessageEmail\":\"AuthForm_validMessageEmail__2v+eU\",\"errorMessagePass\":\"AuthForm_errorMessagePass__7Lbfr\",\"validMessagePass\":\"AuthForm_validMessagePass__rj6TQ\",\"errorMessageConfPass\":\"AuthForm_errorMessageConfPass__MiVu0\",\"validMessageConfPass\":\"AuthForm_validMessageConfPass__Iooc1\",\"linklist\":\"AuthForm_linklist__Knemt\",\"txtLink\":\"AuthForm_txtLink__x6e7-\",\"btnLink\":\"AuthForm_btnLink__426Xi\",\"btnLogContainer\":\"AuthForm_btnLogContainer__Dx0rS\",\"btnRegContainer\":\"AuthForm_btnRegContainer__kY7Uk\",\"close\":\"AuthForm_close__2aBQ4\",\"valid\":\"AuthForm_valid__J9A8q\",\"eyePass\":\"AuthForm_eyePass__elBNH\",\"eyePassConfirm\":\"AuthForm_eyePassConfirm__UPO4h\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AuthFormButton_btn__rXkHK\"};","import PropTypes from 'prop-types';\nimport css from './AuthFormButton.module.css';\n\nconst AuthFormButton = ({ title }) => {\n  return (\n    <button type=\"submit\" className={css.btn}>\n      {title}\n    </button>\n  );\n};\nexport default AuthFormButton;\n\nAuthFormButton.propTypes = {\n  title: PropTypes.string,\n};\n","import css from './AuthForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport classnames from 'classnames';\nimport AuthFormButton from 'components/Buttons/AuthButtons/AuthFormButton/AuthFormButton';\nimport { VscClose } from 'react-icons/vsc';\nimport { BsCheck2 } from 'react-icons/bs';\nimport { BsEye } from 'react-icons/bs';\nimport { BsEyeSlash } from 'react-icons/bs';\n\n\n \nconst AuthForm = ({ isLoginForm, onSubmit }) => {\n  const [isShowPass, setIsShowPass] = useState(false);\n   const [isShowConfPass, setIsShowConfPass] = useState(false);\n\n  function validateEmail(value) {\n    if (!value) {\n      return 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      return 'Enter a valid Email';\n    }\n  }\n\n  function validatePassword(value) {\n    const passwordRegex = /(?=.*[0-9])/;\n    if (!value) {\n      return 'Password is required';\n    } else if (value.length < 6) {\n      return 'Password must be 6 characters long';\n    } else if (!passwordRegex.test(value)) {\n      return 'Password must contain one number.';\n    }\n  }\n\n  const validateConfirmPassword = (pass, value) => {\n    if (!isLoginForm) {\n      if (!value) {\n        return 'Confirm password is required';\n      }\n      if (pass && value) {\n        if (pass !== value) {\n          return 'Password not matched';\n        }\n      }\n    }\n  };\n\n  const handleSubmit = (values) => {\n    onSubmit(values);\n  };\n\n \n  const toggleEyePass = () => {\n    if (isShowPass) {\n      document.getElementById('password').setAttribute('type', 'password');\n      setIsShowPass(false);\n    } else {\n      document.getElementById('password').setAttribute('type', 'text');\n      setIsShowPass(true);\n    }\n  }\n  const toggleEyeConfPass = () => {\n    if (isShowConfPass) {\n      document.getElementById('confirmPassword').setAttribute('type', 'password');\n      setIsShowConfPass(false);\n    } else {\n      document.getElementById('confirmPassword').setAttribute('type', 'text');\n      setIsShowConfPass(true);\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        onSubmit={(values, actions) => {\n          handleSubmit({ email: values.email, password: values.password });\n          actions.resetForm();\n        }}\n      >\n        {({ errors, touched, values }) => (\n          <Form className={css.inputList}>\n            <Field\n              validate={validateEmail}\n              className={classnames(css.input, {\n                [css.errorInput]: errors.email && touched.email,\n                [css.validInput]: !errors.email && touched.email,\n              })}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n            {errors.email && touched.email && (\n              <div className={css.errorMessageEmail}>\n                <VscClose className={css.close} size=\"26px\" />\n                <p>{errors.email}</p>\n              </div>\n            )}\n            {!errors.email && touched.email && (\n              <div className={css.validMessageEmail}>\n                <BsCheck2 className={css.valid} size=\"26px\" />\n                <p>Email is valid</p>\n              </div>\n            )}\n            <Field\n              validate={validatePassword}\n              className={classnames(css.input, {\n                [css.errorInput]: errors.password && touched.password,\n                [css.validInput]: !errors.password && touched.password,\n              })}\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n            />\n            <i\n              className={css.eyePass}\n              aria-hidden=\"true\"\n              id=\"eye\"\n              onClick={toggleEyePass}\n            >\n              {isShowPass ? <BsEye size=\"22px\" /> : <BsEyeSlash size=\"22px\" />}\n            </i>\n            {errors.password && touched.password && (\n              <div className={css.errorMessagePass}>\n                <VscClose\n                  className={css.close}\n                  size=\"26px\"\n                  onClick={toggleEyePass}\n                />\n                <p>{errors.password}</p>\n              </div>\n            )}\n            {!errors.password && touched.password && (\n              <div className={css.validMessagePass}>\n                <BsCheck2\n                  className={css.valid}\n                  size=\"26px\"\n                  onClick={toggleEyePass}\n                />\n                <p>Password is secure</p>\n              </div>\n            )}\n            <Field\n              type={!isLoginForm ? 'password' : 'hidden'}\n              className={classnames(css.input, {\n                [css.errorInput]:\n                  errors.confirmPassword && touched.confirmPassword,\n                [css.validInput]:\n                  !errors.confirmPassword && touched.confirmPassword,\n              })}\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              required\n              validate={value =>\n                validateConfirmPassword(values.password, value)\n              }\n              placeholder=\"Confirm password\"\n            />\n            {!isLoginForm && (\n              <i\n                className={css.eyePassConfirm}\n                aria-hidden=\"true\"\n                id=\"eye\"\n                onClick={toggleEyeConfPass}\n              >\n                {isShowConfPass ? (\n                  <BsEye size=\"22px\" />\n                ) : (\n                  <BsEyeSlash size=\"22px\" />\n                )}\n              </i>\n            )}\n            {!isLoginForm &&\n              errors.confirmPassword &&\n              touched.confirmPassword && (\n                <div className={css.errorMessageConfPass}>\n                  <VscClose\n                    className={css.close}\n                    size=\"26px\"\n                    onClick={toggleEyeConfPass}\n                  />\n                  <p>{errors.confirmPassword}</p>\n                </div>\n              )}\n            {!isLoginForm &&\n              !errors.confirmPassword &&\n              touched.confirmPassword && (\n                <div className={css.validMessageConfPass}>\n                  <BsCheck2\n                    className={css.valid}\n                    size=\"26px\"\n                    onClick={toggleEyeConfPass}\n                  />\n                  <p>Password matched</p>\n                </div>\n              )}\n            <div\n              className={\n                !isLoginForm ? css.btnRegContainer : css.btnLogContainer\n              }\n            >\n              <AuthFormButton title={!isLoginForm ? 'Registration' : 'Login'} />\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <div className={css.linklist}>\n        <p className={css.txtLink}>\n          {!isLoginForm ? 'Already have an account?' : \"Don't have an account?\"}\n        </p>\n        <Link\n          to={!isLoginForm ? '/login' : '/register'}\n          className={css.btnLink}\n        >\n          {!isLoginForm ? 'Login' : 'Register'}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n\nAuthForm.propTypes = {\n  isLoginForm: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegisterPage_section__GPz-D\",\"container\":\"RegisterPage_container__l-2BF\",\"title\":\"RegisterPage_title__Yjy6g\"};","import css from './RegisterPage.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport AuthForm from \"components/AuthForm/AuthForm\";\nimport { register } from \"../../redux/auth/authOperations\";\nimport { getAuth } from 'redux/auth/authSelector';\n\nconst RegisterPage = () => {\n  const { isLogin, token } = useSelector(getAuth);\n  const dispatch = useDispatch();\n  if (isLogin && token) {\n    return <Navigate to=\"/user\" />;\n  }\n\n  const handleSignup = data => {\n    dispatch(register(data));\n  };\n  \n  return (\n    <div className={css.section}>\n      <div className={css.container}>\n        <p className={css.title}>Registration</p>\n        <AuthForm onSubmit={handleSignup} />\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["title","type","className","css","isLoginForm","onSubmit","useState","isShowPass","setIsShowPass","isShowConfPass","setIsShowConfPass","validateEmail","value","test","validatePassword","length","handleSubmit","values","toggleEyePass","document","getElementById","setAttribute","toggleEyeConfPass","initialValues","email","password","confirmPassword","actions","resetForm","errors","touched","validate","classnames","name","placeholder","size","id","onClick","required","pass","validateConfirmPassword","to","useSelector","getAuth","isLogin","token","dispatch","useDispatch","AuthForm","data","register"],"sourceRoot":""}