{"version":3,"file":"static/js/707.a2eb8685.chunk.js","mappings":"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","sources":["components/Buttons/FormButon/ButtonBack.jsx","components/Buttons/FormButon/ButtonNext.jsx","services/ChooseOptions/ChooseOption.jsx","services/MoreInfo/MoreInfo.jsx","services/PersonalDetails/PersonalDetails.jsx","services/InitialState.js","components/AddPetForm/AddPetForm.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ButtonBack = ({ text, clickHandler, type }) => {\n  return (\n    <button onClick={clickHandler} type={type}>\n      {text}\n    </button>\n  );\n};\n\nButtonBack.propTypes = {\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonBack;","import PropTypes from 'prop-types';\n\nconst ButtonNext = ({\n  text,\n  icon,\n  clickHandler,\n  filled,\n  short,\n  type,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={clickHandler && (() => clickHandler(false))}\n      filled={filled ? 'true' : undefined}\n      short={short}\n    >\n      {text}\n      {icon}\n    </button>\n  );\n};\n\nButtonNext.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node,\n  clickHandler: PropTypes.func,\n  filled: PropTypes.bool,\n  short: PropTypes.bool,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n};\n\nButtonNext.defaultProps = {\n  type: 'button',\n};\n\nexport default ButtonNext;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChooseForm(props) {\n\n  const [category, setCategory] = useState('');\n\n  // Функція для обробки події зміни вибраної радіокнопки\n  const handleCategoryChange = (event) => {\n    // Оновлення стану 'category'\n    setCategory(event.target.value);\n    // Виклик функції 'setCategory', яка була передана через пропси, з вибраним значенням\n    props.setCategory(event.target.value);\n  };\n\n  return (\n    <div>\n      {/* Радіокнопка для категорії \"Ваш питомець\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"your-pet\"\n        id=\"your-pet\"\n        checked={category === 'your-pet'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"your-pet\">Your pet</label>\n\n      {/* Радіокнопка для категорії \"Продати\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"sell\"\n        id=\"sell\"\n        checked={category === 'sell'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"sell\">Sell</label>\n\n      {/* Радіокнопка для категорії \"Загублено/знайдено\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"lost-found\"\n        id=\"lost-found\"\n        checked={category === 'lost-found'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"lost-found\">Lost/found</label>\n\n      {/* Радіокнопка для категорії \"На добрі руки\" */}\n      <input\n        type=\"radio\"\n        name=\"category\"\n        value=\"good-hands\"\n        id=\"good-hands\"\n        checked={category === 'good-hands'}\n        onChange={handleCategoryChange}\n      />\n      <label htmlFor=\"good-hands\">In good hands</label>\n    </div>\n  );\n};\n\n\nChooseForm.propTypes = {\n  setCategory: PropTypes.func.isRequired,\n};\n\nexport default ChooseForm;\n\n\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types'; \n\nconst MoreInfo = ({ category, fileInput, setFileInput }) => {\n  const handleAddAvatar = e => {\n    const [file] = e.target.files;\n    if (file) {\n      setFileInput(file); // Збереження вибраного файлу в стані компонента\n      console.log({ file });\n    }\n  };\n    return (\n      <div className=\"personal-form-wrapper\">\n        {/* Відображення вибору статі тільки для певних категорій */}\n        {category !== 'your-pet' && (\n          <div className=\"add-form-sex-wrapper\">\n            <p>The Sex</p>\n            <input\n              type=\"radio\"\n              id=\"female\"\n              name=\"sex\"\n              value=\"female\"\n              className=\"add-form-radio-button\"\n            />\n            <label htmlFor=\"female\" className=\"add-form-sex-label\">\n              Female\n            </label>\n            <input\n              type=\"radio\"\n              id=\"male\"\n              name=\"sex\"\n              value=\"male\"\n              className=\"add-form-radio-button\"\n            />\n            <label htmlFor=\"male\" className=\"add-form-sex-label\">\n              Male\n            </label>\n          </div>\n        )}\n    \n        {/* Відображення поля для вибору фото */}\n        <label htmlFor=\"pet-image\" className=\"add-form-image-label\">\n          Add photo\n          <div className=\"add-form-image-wrapper\">\n            {!fileInput} {/* Відображення повідомлення, якщо файл не вибрано */}\n            {!!fileInput && (\n              <img\n                id=\"image\"\n                src={URL.createObjectURL(fileInput)}\n                alt={fileInput.name}\n              />\n            )} {/* Відображення фото, якщо файл вибрано */}\n          </div>\n          <input\n            type=\"file\"\n            id=\"pet-image\"\n            name=\"pet-image\"\n            accept=\".png, .jpg, .jpeg, .webp\"\n            onChange={handleAddAvatar}\n            className=\"file-input\"\n          />\n          <ErrorMessage name=\"pet-image\" component=\"div\" /> {/* Відображення повідомлення про помилку, якщо є */}\n        </label>\n    \n        {/* Відображення поля для введення розташування тільки для певних категорій */}\n        {category !== 'your-pet' && (\n          <label htmlFor=\"location\" className=\"add-form-label\">\n            Location\n            <input\n              placeholder=\"Type of location\"\n              type=\"text\"\n              name=\"location\"\n              className=\"add-form-input\"\n            />\n            <ErrorMessage name=\"location\" component=\"div\" /> {/* Відображення повідомлення про помилку, якщо є */}\n          </label>\n        )}\n    \n        {/* Відображення поля для введення ціни тільки для категорії \"sell\" */}\n        {category === 'sell' && (\n          <label htmlFor=\"price\" className=\"add-form-label\">\n            Price\n            <input\n              placeholder=\"Type of price\"\n              type=\"text\"\n              name=\"price\"\n              className=\"add-form-input\"\n            />\n            <ErrorMessage name=\"price\" component=\"div\" /> {/* Відображення повідомлення про помилку, якщо є */}\n          </label>\n        )}\n    \n        {/* Відображення поля для введення коментарів */}\n        <label htmlFor=\"comments\" className=\"add-form-label\">\n          Comments\n          <textarea\n            placeholder=\"Type comments\"\n            name=\"comments\"\n            className=\"add-form-text-area\"\n          />\n      <ErrorMessage name=\"comments\" component=\"div\" />\n    </label>\n  </div>);\n};\n\nMoreInfo.propTypes = {\n  category: PropTypes.string.isRequired,\n  fileInput: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.object.isRequired,\n  ]),\n  setFileInput: PropTypes.func.isRequired,\n};\n\nexport default MoreInfo;\n\n\n\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nconst PersonalDetails = ({ category }) => {\n  return (\n    <div className=\"personal-form-wrapper\">\n      <Form>\n        {/* Перевірка, чи категорія не є \"your-pet\" */}\n        {category !== 'your-pet' && (\n          <label htmlFor=\"title\" >\n            Title of add:\n            <Field placeholder=\"Type title\" type=\"text\" name=\"title\" className=\"add-form-input\" />\n            {/* Відображення помилки, якщо поле \"title\" має помилку */}\n            <ErrorMessage name=\"title\" component=\"div\" />\n          </label>\n        )}\n        <label htmlFor=\"name\" >\n          Name:\n          <Field placeholder=\"Type name pet\" type=\"text\" name=\"name\" className=\"add-form-input\" />\n          {/* Відображення помилки, якщо поле \"name\" має помилку */}\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label htmlFor=\"birthday\" >\n          Birthday:\n          <Field\n            placeholder=\"Type date of birth\"\n            type=\"text\"\n            name=\"birthday\"\n            data-pattern=\"**.**.****\"\n            className=\"add-form-input\"\n          />\n          {/* Відображення помилки, якщо поле \"birthday\" має помилку */}\n          <ErrorMessage name=\"birthday\" component=\"div\" />\n        </label>\n        <label htmlFor=\"breed\" className=\"add-form-label\">\n          Breed:\n          <Field placeholder=\"Type breed\" type=\"text\" name=\"breed\" />\n          {/* Відображення помилки, якщо поле \"breed\" має помилку */}\n          <ErrorMessage name=\"breed\" component=\"div\" />\n        </label>\n      </Form>\n    </div>\n  );\n};\n\nPersonalDetails.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default PersonalDetails;\n\n","export const INITIAL_STATE = {\n    category: '',\n    name: '',\n    title: '',\n    birthday: '',\n    breed: '',\n    location: '',\n    comments: '',\n    image: null,\n    sex: '',\n    price: '',\n  }\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\n\nimport ButtonBack from '../Buttons/FormButon/ButtonBack';\nimport ButtonNext from '../Buttons/FormButon/ButtonNext';\nimport ChooseOption from '../../services/ChooseOptions/ChooseOption';\nimport MoreInfo from '../../services/MoreInfo/MoreInfo';\nimport PersonalDetails from '../../services/PersonalDetails/PersonalDetails';\nimport { INITIAL_STATE } from '../../services/InitialState';\n\nconst AddPetForm = () => {\n  const [fileInput, setFileInput] = useState(''); // Стан для вибраного файлу\n  const [step, setStep] = useState(0); // Стан для кроку форми\n  const [title, setTitle] = useState(''); // Стан для заголовку\n  const [category, setCategory] = useState(''); // Стан для категорії\n  const navigate = useNavigate(); // Функція для навігації\n\n  const steps = ['Choose Option', 'Personal Details', 'More Info']; // Масив кроків форми\n\n  const handleCancelClick = () => {\n    navigate('/user'); // Перехід до шляху '/user'\n  };\n\n  const handleNextClick = e => {\n    setStep(prevState => prevState + 1); // Збільшити крок на 1\n  };\n\n  const handlePrevClick = () => {\n    setStep(prevState => prevState - 1); // Зменшити крок на 1\n  };\n\n  const handleSubmit = async values => {\n    // Обробник  форми\n    const formData = new FormData(); // Створення нового об'єкту FormData\n    // Додавання полів до об'єкту FormData\n    formData.append('category', values.category);\n    formData.append('title', values.title);\n    formData.append('name', values.name);\n    formData.append('birthday', values.birthday);\n    formData.append('breed', values.breed);\n    formData.append('sex', values.sex);\n    formData.append('image', fileInput);\n    formData.append('location', values.location);\n    formData.append('price', values.price);\n    formData.append('comments', values.comments);\n\n    formData.forEach((value, key) => console.log(key, ':', value)); // Виведення значень полів FormData в консоль\n  };\n\n  const getPageTitle = useCallback(() => {\n    // Отримання заголовку сторінки залежно від категорії\n    const titles = {\n      'your-pet': 'Add my pet',\n      'sell': 'Add pet for sell',\n      'lost-found': 'Add to lost or found pet',\n      'good-hands': 'Add to give a Pet for Adoption',\n      '': 'Add Pet',\n    };\n    return titles[category] || 'Add Pet';\n  }, [category]);\n\n  useEffect(() => {\n    setTitle(getPageTitle()); // Оновлення заголовку при зміні категорії\n  }, [getPageTitle]);\n\n  return (\n    <div>\n      <h1>{title}</h1> {/* Відображення заголовку форми */}\n      <ul>\n        {/* Відображення списку кроків форми */}\n        {steps.map((stepName, index) => (\n          <li key={index}>\n            <span>{stepName}</span>\n          </li>\n        ))}\n      </ul>\n      <Formik initialValues={INITIAL_STATE} onSubmit={handleSubmit}>\n        {() => (\n          <div>\n            {/* Відображення поточного кроку форми залежно від значення змінної `step` */}\n            {step === 0 && <ChooseOption setCategory={setCategory} />} {/* Крок 1: Вибір опції */}\n            {step === 1 && <PersonalDetails category={category} />} {/* Крок 2: Особисті дані */}\n            {step === 2 && (\n              <MoreInfo\n                fileInput={fileInput}\n                setFileInput={setFileInput}\n                category={category}\n              />\n            )} {/* Крок 3: Додаткова інформація */}\n  \n            <div>\n              {/* Відображення кнопки \"Next\" для переходу до наступного кроку (якщо не останній крок) */}\n              {step < 2 && (\n                <ButtonNext\n                  type=\"button\"\n                  text=\"Next\"\n                  clickHandler={handleNextClick}\n                  filled={true}\n                />\n              )}\n  \n              {/* Відображення кнопки \"Done\" для відправки форми (якщо останній крок) */}\n              {step === 2 && (\n                <ButtonNext\n                  type=\"submit\"\n                  text=\"Done\"\n                  filled={true}\n                  clickHandler={handleSubmit}\n                />\n              )}\n  \n              {/* Відображення кнопки \"Back\" для переходу до попереднього кроку (якщо не перший крок) */}\n              {step > 0 && (\n                <ButtonBack\n                  type=\"button\"\n                  disabled={!category}\n                  clickHandler={handlePrevClick}\n                  text=\"Back\"\n                />\n              )}\n  \n              {/* Відображення кнопки \"Cancel\" для скасування створення  (якщо перший крок) */}\n              {step === 0 && (\n                <ButtonBack\n                  type=\"button\"\n                  clickHandler={handleCancelClick}\n                  text=\"Cancel\"\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </Formik>\n    </div>\n  )};\n\n  export default AddPetForm;\n\n"],"names":["text","clickHandler","type","onClick","ButtonNext","icon","filled","short","undefined","defaultProps","props","useState","category","setCategory","handleCategoryChange","event","target","value","name","id","checked","onChange","htmlFor","fileInput","setFileInput","className","src","URL","createObjectURL","alt","accept","e","file","files","console","log","component","placeholder","INITIAL_STATE","title","birthday","breed","location","comments","image","sex","price","step","setStep","setTitle","navigate","useNavigate","handleCancelClick","handleNextClick","prevState","handlePrevClick","handleSubmit","values","formData","FormData","append","forEach","key","getPageTitle","useCallback","useEffect","map","stepName","index","initialValues","onSubmit","ChooseOption","disabled"],"sourceRoot":""}