{"version":3,"file":"static/js/468.eb644e51.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Buttons/AddPetButton/AddPetButton.module.css?96f6","components/Buttons/AddPetButton/AddPetButton.jsx","webpack://react-homework-template/./src/components/NoticesSearch/NoticesSearch.module.css?e61a","components/NoticesSearch/NoticesSearch.jsx","components/Pagination/PaginationComponent.jsx","components/Pagination/options.js","webpack://react-homework-template/./src/pages/NoticesPage/NoticesPage.module.css?b3b0","webpack://react-homework-template/./src/components/NoticesCategoriesNav/NoticesCategoriesNav.module.css?c0b5","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AddPetButton_btn__3MxBC\",\"btnFavorite\":\"AddPetButton_btnFavorite__BuAbm\",\"icon\":\"AddPetButton_icon__veMNx\"};","import PropTypes from 'prop-types';\nimport { IoAddOutline } from 'react-icons/io5';\nimport css from './AddPetButton.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst AddPetButton = ({ onClick, style }) => {\n  return (\n    <NavLink\n      to=\"/add-pet\"\n      style={style}\n      className={css.btn}\n      type=\"button\"\n      onClick={onClick}\n    >\n      <p className={css.title}>Add Pet</p>\n      {<IoAddOutline className={css.icon} />}\n    </NavLink>\n  );\n};\nexport default AddPetButton;\n\nAddPetButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NoticesSearch_container__Tygup\",\"title\":\"NoticesSearch_title__HSRmE\",\"form\":\"NoticesSearch_form__9GdvP\",\"input\":\"NoticesSearch_input__XVoJx\",\"searchButton\":\"NoticesSearch_searchButton__gYVGg\",\"searchButtonDel\":\"NoticesSearch_searchButtonDel__aa2a0\",\"searchDel\":\"NoticesSearch_searchDel__YHZaE\",\"changeColor\":\"NoticesSearch_changeColor__tWk1G\",\"changeColorDel\":\"NoticesSearch_changeColorDel__wvFHI\"};","import css from './NoticesSearch.module.css';\nimport propTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { useState } from 'react';\nimport { RxCross2 } from 'react-icons/rx';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst NoticesSearch = ({ search, title }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      Notify.warning('Please fill in this field');\n    } else search(query);\n  };\n\n  const deleteQuery = () => {\n    setQuery('');\n    search('');\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>{title}</h2>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          placeholder=\"Search\"\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n\n        {query === '' ? (\n          <button className={css.searchButton} type=\"submit\">\n            <span className={css.changeColor}>\n              <BsSearch style={{ fontSize: 19 }} />\n            </span>\n          </button>\n        ) : (\n          <>\n            <button className={css.searchButtonDel} type=\"submit\">\n              <span className={css.changeColor}>\n                <BsSearch style={{ fontSize: 19 }} />\n              </span>\n            </button>\n            <button\n              className={css.searchDel}\n              type=\"submit\"\n              onClick={deleteQuery}\n            >\n              <span className={css.changeColorDel}>\n                <RxCross2 style={{ fontSize: 25 }} />\n              </span>\n            </button>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NoticesSearch;\n\nNoticesSearch.propTypes = {\n  title: propTypes.string.isRequired,\n  search: propTypes.func.isRequired,\n};\n","//import css from './PaginationComponent.module.css';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport propTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nconst PaginationComponent = ({ searchPage, total, options }) => {\n  const [pageNumber, setPageNumber] = useState(1);\n\n  useEffect(() => {\n    const container = document.getElementById('tui-pagination-container');\n\n    const pagination = new Pagination(container, options);\n    pagination.reset(total);\n    let currentPage = pagination.getCurrentPage();\n\n    setPageNumber(currentPage);\n\n    pagination.on('afterMove', event => {\n      currentPage = event.page;\n      setPageNumber(currentPage);\n    });\n  }, [total, options]);\n\n  useEffect(() => {\n    searchPage(pageNumber);\n  }, [searchPage, pageNumber]);\n\n  return <div id=\"tui-pagination-container\" className=\"tui-pagination\"></div>;\n};\nexport default PaginationComponent;\n\nPaginationComponent.propTypes = {\n  searchPage: propTypes.func.isRequired,\n  total: propTypes.number.isRequired,\n  options: propTypes.object.isRequired,\n};\n","const screenWidth = window.screen.width;\n\nconst isMobile = screenWidth <= 768;\n\nconst optionsForPaginationNotices = {\n  totalItems: 0,\n  itemsPerPage: 12,\n  visiblePages: isMobile ? 4 : 5,\n  page: 1,\n  centerAlign: false,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nconst optionsForPaginationNews = {\n  totalItems: 0,\n  itemsPerPage: 6,\n  visiblePages: isMobile ? 4 : 5,\n  page: 1,\n  centerAlign: false,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nconst optionsPagination = {\n  noticesOptions: optionsForPaginationNotices,\n  newsOptions: optionsForPaginationNews,\n};\n\nexport default optionsPagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NoticesPage_container__56Lm5\",\"section\":\"NoticesPage_section__PGRRq\",\"wrap\":\"NoticesPage_wrap__YXPFN\",\"btnAdd\":\"NoticesPage_btnAdd__fFCjO\",\"btnFavorite\":\"NoticesPage_btnFavorite__IUaH7\",\"paginationDiv\":\"NoticesPage_paginationDiv__MqKYE\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"NoticesCategoriesNav_list__AqSbX\",\"link\":\"NoticesCategoriesNav_link__GLu34\"};","import css from './NoticesCategoriesNav.module.css';\nimport { useSelector } from 'react-redux';\nimport { getAuth } from '../../redux/auth/authSelector';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst NoticesCategoriesNav = ({ setpage }) => {\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const { isLogin } = useSelector(getAuth);\n\n  return (\n    <>\n      {!isLogin ? (\n        <ul className={css.list}>\n          <li className={css.item} onClick={setpage}>\n            <NavLink className={css.link} to=\"sell\" state={{ from }}>\n              sell\n            </NavLink>\n          </li>\n          <li onClick={setpage}>\n            <NavLink className={css.link} to=\"lost-found\" state={{ from }}>\n              lost/found\n            </NavLink>\n          </li>\n          <li onClick={setpage}>\n            <NavLink className={css.link} to=\"for-free\" state={{ from }}>\n              in good hands\n            </NavLink>\n          </li>\n        </ul>\n      ) : (\n        <ul className={css.list}>\n          <li className={css.item}>\n            <NavLink className={css.link} to=\"sell\" state={{ from }}>\n              sell\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={css.link} to=\"lost-found\" state={{ from }}>\n              lost/found\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={css.link} to=\"for-free\" state={{ from }}>\n              in good hands\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={css.link} to=\"favorite\" state={{ from }}>\n              favorite ads\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={css.link} to=\"own\" state={{ from }}>\n              my ads\n            </NavLink>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n};\nexport default NoticesCategoriesNav;\n","import css from './NoticesPage.module.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\n// import NoticesFilters from 'components/NoticesFilters/NoticesFilters';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport PaginationComponent from '../../components/Pagination/PaginationComponent';\n\nimport AddPetButton from 'components/Buttons/AddPetButton/AddPetButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAllNotices,\n  fetchNoticeById,\n  fetchNoticesByOwner,\n} from '../../redux/notices/noticesOperations';\nimport { getAuth } from '../../redux/auth/authSelector';\nimport { totalNotices } from '../../redux/selectors';\nimport options from '../../components/Pagination/options';\n\n//import { Notify } from 'notiflix/build/notiflix-notify-aio';\n//import axios from 'axios';\n\n//import url from './4.jpg';\n\nconst NoticesPage = () => {\n  const total = useSelector(totalNotices);\n  const { pathname } = useLocation();\n\n  // const [pathFilter, setPathFilter] = useState('sell');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  //const [page, setPage] = useState(1);\n\n  const [page, setPage] = useState(() => {\n    const params = searchParams.get('page');\n    return params ? params : 1;\n  });\n\n  const [query, setQuery] = useState(() => {\n    const params = searchParams.get('query');\n    return params ? params : '';\n  });\n\n  const { isLogin } = useSelector(getAuth);\n\n  const { current } = useRef(window.innerWidth);\n\n  const dispatch = useDispatch();\n\n  const pathnameArr = pathname.split('/');\n  const lastPartPath = pathnameArr[pathnameArr.length - 1];\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setSearchParams({});\n  }, [pathname, setSearchParams]);\n\n  useEffect(() => {\n    if (query && page === 1) {\n      setSearchParams({ query });\n    } else if (query && page > 1) {\n      setSearchParams({ query, page });\n    } else if (!query && page > 1) {\n      setSearchParams({ page });\n    } else if (!query && page === 1) {\n      setSearchParams({});\n    }\n\n    if (\n      pathname === '/notices/lost-found' ||\n      pathname === '/notices/for-free' ||\n      pathname === '/notices/favorite' ||\n      pathname === '/notices/own'\n    ) {\n    } else {\n      navigate('/notices/sell');\n    }\n\n    let queryParams = {\n      category: lastPartPath,\n      title: query,\n      page: searchParams.get('page') ? searchParams.get('page') : 1,\n    };\n    if (lastPartPath === 'notices') {\n      queryParams = {\n        category: 'sell',\n        title: query,\n        page: searchParams.get('page') ? searchParams.get('page') : 1,\n      };\n    }\n\n    dispatch(fetchAllNotices(queryParams));\n\n    const searchNoticesByOwner = queryParams => {\n      try {\n        dispatch(fetchNoticesByOwner(queryParams));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (isLogin && lastPartPath === 'own') {\n      const queryParams = { category: '', title: query, page };\n      searchNoticesByOwner(queryParams);\n    }\n  }, [\n    dispatch,\n    lastPartPath,\n    query,\n    page,\n    setSearchParams,\n    pathname,\n    navigate,\n    isLogin,\n    searchParams,\n  ]);\n\n  const submitSearch = query => {\n    setQuery(query);\n  };\n\n  const handleLearnMore = e => {\n    if (e.target.parentNode.getAttribute('id') || e.target.getAttribute('id')) {\n      const idNotice =\n        e.target.getAttribute('id') || e.target.parentNode.getAttribute('id');\n\n      fetchNoticeById(idNotice);\n      dispatch(fetchNoticeById(idNotice));\n    }\n  };\n\n  const searchPage = pageNumber => {\n    setPage(pageNumber);\n  };\n\n  const changePage = () => {\n    setPage(1);\n  };\n\n  return (\n    <>\n      <section className={css.section}>\n        <div className={css.container} onClick={handleLearnMore}>\n          <NoticesSearch\n            search={submitSearch}\n            title={'Find your favorite pet'}\n            /* query={query} */\n            /* setQuery={setQuery} */\n          />\n\n          <div className={css.wrap}>\n            <NoticesCategoriesNav setpage={changePage} />\n            <AddPetButton\n              style={\n                current <= 767\n                  ? {\n                      position: 'fixed',\n                      zIndex: 100,\n                      top: '81vh',\n                      right: '21px',\n                      borderRadius: '50%',\n                      width: '80px',\n                      height: '80px',\n                      flexDirection: 'column-reverse',\n\n                      lineHeight: '1.37',\n                      padding: 0,\n                    }\n                  : {}\n              }\n            />\n          </div>\n\n          {/* <NoticesFilters /> */}\n          <NoticesCategoriesList category={lastPartPath} />\n          {total > options.noticesOptions.itemsPerPage ? (\n            <div className={css.paginationDiv}>\n              <PaginationComponent\n                searchPage={searchPage}\n                total={total}\n                options={options.noticesOptions}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["onClick","style","to","className","css","type","search","title","useState","query","setQuery","onSubmit","e","preventDefault","Notify","placeholder","value","onChange","target","fontSize","searchPage","total","options","pageNumber","setPageNumber","useEffect","container","document","getElementById","pagination","Pagination","reset","currentPage","getCurrentPage","on","event","page","id","isMobile","window","screen","width","optionsPagination","noticesOptions","totalItems","itemsPerPage","visiblePages","centerAlign","firstItemClassName","lastItemClassName","template","moveButton","disabledMoveButton","moreButton","newsOptions","setpage","from","useLocation","state","isLogin","useSelector","getAuth","totalNotices","pathname","useSearchParams","searchParams","setSearchParams","params","get","setPage","current","useRef","innerWidth","dispatch","useDispatch","pathnameArr","split","lastPartPath","length","navigate","useNavigate","queryParams","category","fetchAllNotices","fetchNoticesByOwner","error","console","log","searchNoticesByOwner","parentNode","getAttribute","idNotice","fetchNoticeById","NoticesSearch","AddPetButton","position","zIndex","top","right","borderRadius","height","flexDirection","lineHeight","padding","NoticesCategoriesList","PaginationComponent"],"sourceRoot":""}